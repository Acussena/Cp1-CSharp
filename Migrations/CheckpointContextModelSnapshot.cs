// <auto-generated />
using System;
using CheckPoint1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckPoint1.Migrations
{
    [DbContext(typeof(CheckpointContext))]
    partial class CheckpointContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CheckPoint1.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(7985),
                            Descricao = "Tecnologia e gadgets",
                            Nome = "Eletrônicos"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(7996),
                            Descricao = "Moda masculina e feminina",
                            Nome = "Roupas"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(7998),
                            Descricao = "Produtos alimentícios",
                            Nome = "Alimentos"
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataCadastro = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8143),
                            Email = "acussena@email.com",
                            Nome = "Açussena"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataCadastro = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8145),
                            Email = "joao@email.com",
                            Nome = "João Silva"
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NumeroPedido")
                        .IsUnique();

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataPedido = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8168),
                            NumeroPedido = "P001",
                            Status = 1,
                            ValorTotal = 3600m
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            DataPedido = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8170),
                            NumeroPedido = "P002",
                            Status = 1,
                            ValorTotal = 245m
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PedidoId = 1,
                            PrecoUnitario = 3500m,
                            ProdutoId = 1,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = 2,
                            PedidoId = 1,
                            PrecoUnitario = 50m,
                            ProdutoId = 3,
                            Quantidade = 2
                        },
                        new
                        {
                            Id = 3,
                            PedidoId = 2,
                            PrecoUnitario = 25m,
                            ProdutoId = 5,
                            Quantidade = 5
                        },
                        new
                        {
                            Id = 4,
                            PedidoId = 2,
                            PrecoUnitario = 120m,
                            ProdutoId = 4,
                            Quantidade = 1
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Estoque")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8110),
                            Estoque = 10,
                            Nome = "Notebook",
                            Preco = 3500m
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8112),
                            Estoque = 0,
                            Nome = "Smartphone",
                            Preco = 2500m
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8113),
                            Estoque = 100,
                            Nome = "Camiseta",
                            Preco = 50m
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8115),
                            Estoque = 50,
                            Nome = "Calça Jeans",
                            Preco = 120m
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8116),
                            Estoque = 200,
                            Nome = "Arroz 5kg",
                            Preco = 25m
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2025, 10, 4, 14, 25, 36, 356, DateTimeKind.Local).AddTicks(8117),
                            Estoque = 0,
                            Nome = "Feijão 1kg",
                            Preco = 8m
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Pedido", b =>
                {
                    b.HasOne("CheckPoint1.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CheckPoint1.Models.PedidoItem", b =>
                {
                    b.HasOne("CheckPoint1.Models.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckPoint1.Models.Produto", "Produto")
                        .WithMany("PedidoItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CheckPoint1.Models.Produto", b =>
                {
                    b.HasOne("CheckPoint1.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CheckPoint1.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CheckPoint1.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("CheckPoint1.Models.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("CheckPoint1.Models.Produto", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
